@function hsbbrighten($color, $amount) {
    // Comments show example with arguments #14805e, 10;
    $r : red($color); // 20
    $g : green($color); // 128
    $b : blue($color); // 94

    $currentBrightness: max($r, $g, $b) * (100/255); // 50
    $newBrightness: min(100, $currentBrightness + $amount); // 60
    $changeAsPercentage: $newBrightness/$currentBrightness; //1.2

    $r2 : min(255, $r * $changeAsPercentage); // 24
    $g2 : min(255, $g * $changeAsPercentage); // 153
    $b2 : min(255, $b * $changeAsPercentage); // 112

    $newColor: rgb($r2, $g2, $b2);
    @return $newColor;
}

@function hsbsaturate($color, $amount) {
    $r : red($color);
    $g : green($color);
    $b : blue($color);

    // Find current saturation level
    $currentSaturation: 1 - (min($r, $g, $b) / max($r, $g, $b));
    $newSaturation: $currentSaturation + ($amount/100);
    $newSaturation: max(0, min(1, $newSaturation));

    @if $newSaturation == $currentSaturation {
        @return $color;
    }

    $hueValue: hue($color);
    $hueValue: $hueValue / ($hueValue * 0 + 1);
    $maxRGB: max($r, $g, $b);

    @if $hueValue <= 60 {
        $newColors: generateHighMidLow($hueValue/60, $newSaturation, $maxRGB);
        $r2: nth($newColors, 1);
        $g2: nth($newColors, 2);
        $b2: nth($newColors, 3);
        @return rgb($r2, $g2, $b2);
    }

    @if $hueValue > 60 and $hueValue <= 120 {
        $newColors: generateHighMidLow((120 - $hueValue)/60, $newSaturation, $maxRGB);
        $r2: nth($newColors, 2);
        $g2: nth($newColors, 1);
        $b2: nth($newColors, 3);
        @return rgb($r2, $g2, $b2);
    }

    @if $hueValue > 120 and $hueValue <= 180 {
        $newColors: generateHighMidLow(($hueValue - 120)/60, $newSaturation, $maxRGB);
        $r2: nth($newColors, 3);
        $g2: nth($newColors, 1);
        $b2: nth($newColors, 2);
        @return rgb($r2, $g2, $b2);
    }

    @if $hueValue > 180 and $hueValue <= 240 {
        $newColors: generateHighMidLow((240 - $hueValue)/60, $newSaturation, $maxRGB);
        $r2: nth($newColors, 3);
        $g2: nth($newColors, 2);
        $b2: nth($newColors, 1);
        @return rgb($r2, $g2, $b2);
    }

    @if $hueValue > 240 and $hueValue <= 300 {
        $newColors: generateHighMidLow(($hueValue - 240)/60, $newSaturation, $maxRGB);
        $r2: nth($newColors, 2);
        $g2: nth($newColors, 3);
        $b2: nth($newColors, 1);
        @return rgb($r2, $g2, $b2);
    }

    @if $hueValue > 300 and $hueValue <= 360{
        $newColors: generateHighMidLow((300 - $hueValue)/60, $newSaturation, $maxRGB);
        $r2: nth($newColors, 1);
        $g2: nth($newColors, 3);
        $b2: nth($newColors, 2);
        @return rgb($r2, $g2, $b2);
    }
    @return rgb($r2, $g2, $b2);
}